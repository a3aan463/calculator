name: Preintergation Checks on Feature Branch

# on:
#   pull_request:
#     branches: [ master ]

on:
  push:
    branches-ignore:
      - 'master'
jobs: 

  run_unit_tests:
    runs-on: ubuntu-latest  
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven  

      - name: Run unit tests
        run: mvn test -Dtest=CalculatorControllerCalculationTests

  run_coverage:
    runs-on: ubuntu-latest
    #needs: run_unit_tests
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
         
      - name: Run tests and calculate code coverage
        run: mvn test jacoco:report
      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: target/site/jacoco
          retention-days: 7

  scan_dependency:
    runs-on: ubuntu-latest
    #needs: run_coverage
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Cache OWASP Dependency Check Data
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2
            ~/.dependency-check
          key: ${{ runner.os }}-owasp-data-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-owasp-data-

      - name: Owasp Dependency Check
        run: mvn dependency-check:check

      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: |
            target/dependency-check-report.html
            target/dependency-check-report.xml

      
  super-lint:
    runs-on: ubuntu-latest  
    #needs: run_coverage
    steps:
      - name: checkout repository code
        uses: actions/checkout@v3
        

      - name: Run Super Linter
        uses: github/super-linter@v4

        continue-on-error: true
        env:
          VALIDATE_ALL_CODEBASE: true
          VALIDATE_JAVASCRIPT_ES: true
          VALIDATE_PYTHON_BLACK: true
          VALIDATE_HTML: true
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILTER_REGEX_INCLUDE: '^target/.*'
          OUTPUT_FORMAT: 'SARIF'
          OUTPUT_DETAILS: 'detailed'
          REPORT_OUTPUT: 'target/super-linter-report/linter.log'

      - name: Ensure Super Linter Report Directory Exists
        run: mkdir -p target/super-linter-report/

      - name: Upload Super Linter Report
        uses: actions/upload-artifact@v3
        with:
          name: super-linter-report
          path: target/super-linter-report/linter.log

  # build:
  #   runs-on: ubuntu-latest
  #   needs: [super-lint,scan_dependency,run_unit_tests,run_coverage]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: '11'
  #         distribution: 'temurin'
  #         cache: maven
  #     - name: Check Git status
  #       run: git status
  #     - name: Build with Maven
  #       run: mvn clean install "-DskipTests" "-Djacoco.skip=true" "-Ddependency-check.skip=true"
  #     - name: Upload artifact for deployment job
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: java-app
  #         path: '${{ github.workspace }}/target/*.jar'